generator client {
   provider= "prisma-client-js"
   previewFeatures = ["referentialIntegrity"]
}

datasource db{
   provider ="mysql"
   url = env("DATABASE_URL")
   referentialIntegrity = "prisma"
}
enum  LinkType{
   FACEBOOK
   INSTAGRAM
   TWITTER
   YOUTUBE
   LINKEDIN
   PINTEREST
   TIKTOK
   SNAPCHAT
   REDDIT
   OTHER
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    links        Link[]
    biography    String? @db.Text
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Link {
    id String @id @default(cuid())
    url String
    role    LinkType     @default(OTHER)
    userId       String
    
    user         User     @relation(fields: [userId], references: [id])
}